@model ContactWeb.ViewModels.CreateEditAddressDTO


<div class="form-group">
    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @id = "modalNewAddressEmail" } })
        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.PhonePrimary, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.PhonePrimary, new { htmlAttributes = new { @class = "form-control", @id = "modalNewAddressPhonePrimary" } })
        @Html.ValidationMessageFor(model => model.PhonePrimary, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.PhoneSecondary, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.PhoneSecondary, new { htmlAttributes = new { @class = "form-control", @id = "modalNewAddressPhoneSecondary" } })
        @Html.ValidationMessageFor(model => model.PhoneSecondary, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.StreetAddress1, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.StreetAddress1, new { htmlAttributes = new { @class = "form-control", @id = "modalNewAddressStreetAddress1" } })
        @Html.ValidationMessageFor(model => model.StreetAddress1, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.StreetAddress2, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.StreetAddress2, new { htmlAttributes = new { @class = "form-control", @id = "modalNewAddressStreetAddress2" } })
        @Html.ValidationMessageFor(model => model.StreetAddress2, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", @id = "modalNewAddressCity" } })
        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    <label id="stateDDLLabel" class="control-label col-md-2">State:</label>
    <div class="col-md-10">
        @Html.DropDownListFor(model => model.StateId, new SelectList(Model.States.Items, "value", "text")
             , new { @class = "form-control", @id = "modalStateDDL" })
        @Html.ValidationMessageFor(model => model.StateId, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Zip, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Zip, new { htmlAttributes = new { @class = "form-control", @id = "modalNewAddressZip" } })
        @Html.ValidationMessageFor(model => model.Zip, "", new { @class = "text-danger" })
    </div>
</div>
@Html.HiddenFor(model => model.StateId, new { @id = "modalNewAddressStateId" })
@Html.HiddenFor(model => model.ContactId, new { @id = "modalNewAddressContactId" })
@Html.HiddenFor(model => model.Id, new { @id = "modalNewAddressId" })